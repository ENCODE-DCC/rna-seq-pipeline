{
  "rna.align": {
    "anno_flagstat": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/transcriptome flagstats"
    },
    "anno_flagstat_json": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/transcriptome flagstats json"
    },
    "annobam": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/transcriptome alignments"
    },
    "genome_flagstat": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/genome flagstats"
    },
    "genome_flagstat_json": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/genome flagstats json"
    },
    "genomebam": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/genome alignments"
    },
    "log": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/STAR log"
    },
    "log_json": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/STAR log json"
    },
    "python_log": {
      "path": "align/rep${i+1}/${basename}",
      "table": "Align/Replicate ${i+1}/python log"
    }
  },
  "rna.bam_to_signals": {
    "all_minus": {
      "path": "bam_to_signals/rep${i+1}/${basename}",
      "table": "Bam_to_signals/Replicate ${i+1}/signal track of all reads from minus strand"
    },
    "all_plus": {
      "path": "bam_to_signals/rep${i+1}/${basename}",
      "table": "Bam_to_signals/Replicate ${i+1}/signal track of all reads from plus strand"
    },
    "all_unstranded": {
      "path": "bam_to_signals/rep${i+1}/${basename}",
      "table": "Bam_to_signals/Replicate ${i+1}/signal track of all reads"
    },
    "python_log": {
      "path": "bam_to_signals/rep${i+1}/${basename}",
      "table": "Bam_to_signals/Replicate ${i+1}/python log"
    },
    "unique_minus": {
      "path": "bam_to_signals/rep${i+1}/${basename}",
      "table": "Bam_to_signals/Replicate ${i+1}/signal track of unique reads from minus strand"
    },
    "unique_plus": {
      "path": "bam_to_signals/rep${i+1}/${basename}",
      "table": "Bam_to_signals/Replicate ${i+1}/signal track of unique reads from plus strand"
    },
    "unique_unstranded": {
      "path": "bam_to_signals/rep${i+1}/${basename}",
      "table": "Bam_to_signals/Replicate ${i+1}/signal track of unique reads"
    }
  },
  "rna.kallisto": {
    "python_log": {
      "path": "kallisto/rep${i+1}/${basename}",
      "table": "Kallisto/Replicate ${i+1}/python log"
    },
    "quants": {
      "path": "kallisto/rep${i+1}/${basename}",
      "table": "Kallisto/Replicate ${i+1}/kallisto quants"
    }
  },
  "rna.mad_qc": {
    "madQCmetrics": {
      "path": "mad_qc/${basename}",
      "table": "Mad_QC/Mad QC metrics json"
    },
    "madQCplot": {
      "path": "mad_qc/${basename}",
      "table": "Mad_QC/Mad QC plot"
    },
    "python_log": {
      "path": "mad_qc/${basename}",
      "table": "Mad_QC/python log"
    }
  },
  "rna.rna_qc": {
    "python_log": {
      "path": "rna_qc/rep${i+1}/${basename}",
      "table": "RNA_QC/Replicate ${i+1}/python log"
    },
    "rnaQC": {
      "path": "rna_qc/rep${i+1}/${basename}",
      "table": "RNA_QC/Replicate ${i+1}/rna qc metrics json"
    }
  },
  "rna.rsem_quant": {
    "genes_results": {
      "path": "rsem_quant/rep${i+1}/${basename}",
      "table": "Rsem_quant/Replicate ${i+1}/gene quants"
    },
    "isoforms_results": {
      "path": "rsem_quant/rep${i+1}/${basename}",
      "table": "Rsem_quant/Replicate ${i+1}/isoform quants"
    },
    "number_of_genes": {
      "path": "rsem_quant/rep${i+1}/${basename}",
      "table": "Rsem_quant/Replicate ${i+1}/number of genes detected json"
    },
    "python_log": {
      "path": "rsem_quant/rep${i+1}/${basename}",
      "table": "Rsem_quant/Replicate ${i+1}/python log"
    }
  }
}
